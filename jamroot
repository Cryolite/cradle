path-constant CRADLE_ROOT : . ;

import feature ;
import option ;


local with-intro = [ option.get "with-intro" : "UNSPECIFIED" : "IMPLIED" ] ;
switch "$(with-intro)" {
case "UNSPECIFIED" :
  with-intro = "no" ;
case "IMPLIED" :
  with-intro = "yes" ;
case "yes" :
  with-intro = "yes" ;
case "no" :
  with-intro = "yes" ;
case "" :
  errors.error "the value specified for `--intro' is empty." ;
case "*" :
  errors.error "an invalid value `$(with-intro)' is specified for `--intro'." ;
}
constant CRADLE_WITH_INTRO : "$(with-intro)" ;


feature.feature cradle-checking
  : off on pedantic
  : propagated composite
  ;
feature.compose <cradle-checking>on
  : <define>CRADLE_CHECKING
  ;
feature.compose <cradle-checking>pedantic
  : <define>CRADLE_CHECKING
    <define>CRADLE_CHECKING_PEDANTIC
  ;

feature.feature cradle-coverage
  : off on
  : propagated composite
  ;
feature.compose <cradle-coverage>on
  : <cflags>--coverage
    <linkflags>--coverage
  ;

feature.feature cradle-xunit-log-format
  : hrf xml
  : propagated incidental
  ;
feature.feature cradle-xunit-log-format-run
  : hrf xml
  ;
constant CRADLE_XUNIT_LOG_FORMAT_RUN_PROPERTIES
  : <cradle-xunit-log-format>hrf:<cradle-xunit-log-format-run>hrf
    <cradle-xunit-log-format-run>hrf:<testing.arg>--show_progress=yes
    <cradle-xunit-log-format-run>hrf:<testing.arg>--xunit-log-format=hrf
    <cradle-xunit-log-format>xml:<cradle-xunit-log-format-run>xml
    <cradle-xunit-log-format-run>xml:<testing.arg>--build_info=yes
    <cradle-xunit-log-format-run>xml:<testing.arg>--output_format=XML
    <cradle-xunit-log-format-run>xml:<testing.arg>--log_level=all
    <cradle-xunit-log-format-run>xml:<testing.arg>--report_level=no
    <cradle-xunit-log-format-run>xml:<testing.arg>--xunit-log-format=xml
  ;

if "$(CRADLE_WITH_INTRO)" = yes {
  project cradle
    : requirements
      <std>c++11
      <runtime-link>shared
      <threading>single:<define>CRADLE_SINGLE_THREADING
      <threading>multi:<define>CRADLE_MULTI_THREADING
      <include>.
      <warnings>all
      <c++-template-depth>1024
      <hardcode-dll-paths>false
      <linkflags>"-Wl,--no-allow-shlib-undefined"
    : build-dir bin
    ;
  constant CRADLE_COMPILE_PROPERTIES
    : $(INTRO_COMPILE_PROPERTIES)
    ;
  constant CRADLE_LINK_PROPERTIES
    : $(INTRO_LINK_PROPERTIES)
    ;
  constant CRADLE_RUN_PROPERTIES
    : $(INTRO_RUN_PROPERTIES)
      $(CRADLE_XUNIT_LOG_FORMAT_RUN_PROPERTIES)
    ;
}
else {
  project cradle
    : requirements
      <toolset>gcc:<cxxflags>-std=c++0x
      <toolset>clang:<cxxflags>-std=c++11
      <toolset>intel:<cxxflags>-std=c++11
      <runtime-link>shared
      <threading>single:<define>CRADLE_SINGLE_THREADING
      <threading>multi:<define>CRADLE_MULTI_THREADING
      <include>.
      <warnings>all
      <c++-template-depth>1024
      <hardcode-dll-paths>false
      <linkflags>"-Wl,--no-allow-shlib-undefined"
    : build-dir bin
    ;
  #constant CRADLE_COMPILE_PROPERTIES : ;
  #constant CRADLE_LINK_PROPERTIES : ;
  constant CRADLE_RUN_PROPERTIES
    : $(CRADLE_XUNIT_LOG_FORMAT_RUN_PROPERTIES)
    ;
}


use-project /cradle/ext/glibc : ext/glibc ;
use-project /cradle/ext/libstdcxx : ext/libstdcxx ;
use-project /cradle/ext/boost : ext/boost ;
use-project /cradle/src : src ;
use-project /cradle/src/mpl : src/mpl ;
use-project /cradle/src/type_traits : src/type_traits ;
use-project /cradle/src/utility : src/utility ;
use-project /cradle/src/exception : src/exception ;
use-project /cradle/src/functional : src/functional ;
use-project /cradle/src/scope_guard : src/scope_guard ;
